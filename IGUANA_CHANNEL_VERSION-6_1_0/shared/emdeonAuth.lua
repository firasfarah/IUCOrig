-- This module contains functions dealing with all Emdeon interactions
--    required for the interface

local requests = require('requestCreators')
local utils = require('utils')            
local retry = require('retry')           

local emdAuth = {}

-- Description: Obtains the Emdeon credentials from CCP, required
--              for all Emdeon API calls
-- Parameter(s): 
--         - urn: The urn for ccp
--         - header: The header required for all CCP interactions
-- Return(s):
--         - emdUrl: The Emdeon URL
--         - emdUser: The Emdeon user
--         - emdPasswd: The Emdeon password
--         - facility: The Emdeon facility
--         - Returns false if the Emdeon credential lookup failed
function emdAuth.getEmdeonCredentials(urn,header) 
   local soapBody = requests.getEmdeonSettings(header) 
   
   local credXml,respCode 
    = retry.call{func = net.http.post, arg1 = {url = urn,
                    headers= {['content-type'] = 'application/soap+xml; charset=UTF-8'}, 
                    body = soapBody,
                    timeout=100,
                    live=true}, retry = 3, pause = 30}
   
   if respCode == 200 then 
      local pCredXml = xml.parse{data = credXml}
      local emdUrl = pCredXml["s:Envelope"]["s:Body"].ExecuteResponse.ExecuteResult
                             ["b:Results"]["b:KeyValuePairOfstringanyType"]["c:value"]
                             ["b:Entities"]["b:Entity"]["b:Attributes"]:child("b:KeyValuePairOfstringanyType", 7)
                             ["c:value"]:nodeText() 
      local emdUser   = pCredXml["s:Envelope"]["s:Body"].ExecuteResponse.ExecuteResult
                                ["b:Results"]["b:KeyValuePairOfstringanyType"]["c:value"]
                                ["b:Entities"]["b:Entity"]["b:Attributes"]:child("b:KeyValuePairOfstringanyType", 9)
                                ["c:value"]:nodeText()                                       
      local emdPasswd = pCredXml["s:Envelope"]["s:Body"].ExecuteResponse.ExecuteResult
                                ["b:Results"]["b:KeyValuePairOfstringanyType"]["c:value"]
                                ["b:Entities"]["b:Entity"]["b:Attributes"]:child("b:KeyValuePairOfstringanyType", 5)
                                ["c:value"]:nodeText() 
      local facility  = pCredXml["s:Envelope"]["s:Body"].ExecuteResponse.ExecuteResult
                                ["b:Results"]["b:KeyValuePairOfstringanyType"]["c:value"]
                                ["b:Entities"]["b:Entity"]["b:Attributes"]:child("b:KeyValuePairOfstringanyType", 3)
                                ["c:value"]:nodeText()                                       
     return emdUrl,emdUser,emdPasswd,facility
   else 
      return false
   end
end

-- Description: Performs the call to Emdeon to update the reports
--              as downloaded
-- Parameter(s): 
--         - emdUrl: The Emdeon URL
--         - emdUser: The Emdeon user
--         - emdPasswd: The Emdeon password
--         - facility: The Emdeon facility
--         - reportId: The clinical report ID
-- Return(s):
--         NONE
function emdAuth.updateReportPull(emdUrl,emdUser,emdPasswd,facility,reportId) 
   local baseUrl = emdUrl..'/servlet/XMLServlet?request='
   local updateReportCall = emdAuth.updateReportPullCall(emdUser,emdPasswd,facility,reportId)
 
   local respData,respCode,respHeaders = retry.call{func=net.http.post,arg1={url=baseUrl..updateReportCall,live = true},pause=30,retry=3}
   if respCode ~= 200 then 
      iguana.logError('Emdeon download update failed for clinical report ID'..reportId)
   end
end

-- Description: Pulls the report with the provided report Id from Emdeon
--              and calls mapToJson to create the JSON object which will
--              be used by channel 2
-- Parameter(s): 
--         - emdUrl: The Emdeon URL
--         - emdUser: The Emdeon user
--         - emdPasswd: The Emdeon password
--         - facility: The Emdeon facility
--         - clinReportId: The clinical report ID
-- Return(s):
--         jsonObj: The JSON object to be used by Channel 2 
function emdAuth.getEachReport(emdUrl,emdUser,emdPasswd,facility,clinReportId) 
   local baseUrl = emdUrl..'/servlet/XMLServlet?request='
   local eachReportCall = emdAuth.createGetEachReportCall(emdUser,emdPasswd,facility,clinReportId)
   
   local respData,respCode,respHeaders = retry.call{func=net.http.post,arg1={url=baseUrl..eachReportCall,live = true},pause=30,retry=3}
   
   local jsonObj = emdAuth.mapToJson(respData)
   
   return jsonObj
 
end

-- Description: Takes an XML report returned from Emdeon and 
--              maps it to a JSON object with an 'HL7' field that contains
--              the hl7 message (stripped of any PDFs), a 'ClinicalReportId'
--              field that has the clinical report Id of the pulled report,
--              and 'htmlFileName' and 'pdfFileName' fields that hold the 
--              html and pdfs (if available), respectively.
-- Parameter(s): 
--         - xmlReports: an individual report XML pulled from Emdeon
-- Return(s):
--         - the Json object as a string
function emdAuth.mapToJson(xmlReports) 
  
   local pRespData = xml.parse{data = xmlReports}

   local jsonObj = {}
   
   jsonObj['ClinicalReportId'] = pRespData.RESULT.OBJECT.clinicalreport:nodeText()
   trace(jsonObj)
   for k = 1,pRespData.RESULT:childCount("OBJECT") do 
      local mimeType = pRespData.RESULT:child("OBJECT",k).mime_type:nodeText()
      
      if  mimeType:find('HL7') then  
         jsonObj = emdAuth.processHL7(pRespData.RESULT:child("OBJECT",k).body_text:nodeText(),jsonObj)
      elseif mimeType:find('html') then 
         jsonObj = emdAuth.processHtml(pRespData.RESULT:child("OBJECT",k).body_text:nodeText(),jsonObj)
      end
  
   end

   return json.serialize{data=jsonObj}
end

-- Description: Takes the html, extracted from an Emdeon report XML, and 
--              saves it in a file. The full file path is placed in the 
--              json object. 
-- Parameter(s): 
--         - html: the html contents extracted from an Emdeon report XML
--         - jsonObject: The JSON object
-- Return(s):
--         - jsonObject: The JSON object with the updated field for htmlFileName
function emdAuth.processHtml(html,jsonObject) 
   local fileName = utils.saveHtml(html)
   jsonObject['htmlFileName'] = fileName
   return jsonObject
end

-- Description: Takes the hl7Msg and saves it in the JSON in field 'HL7'.
--              If the HL7 message contains an embedded pdf,
--              then the pdf is stripped and saved on disk. 
--              The path to the file is then added to the json object
--              in field 'pdfFileName'
-- Parameter(s): 
--         - hl7Msg: the hl7Msg extracted from an Emdeon report XML
--         - jsonObject: The JSON object
-- Return(s):
--         - jsonObject: The JSON object with the updated field for htmlFileName
function emdAuth.processHL7(hl7Msg,jsonObject) 
   local pdfContents = ''
   
   local hl7Msg,Nme = hl7.parse{data = hl7Msg,vmd = 'emdeon.vmd'}
   local hl7Msg2 = hl7.message{vmd = 'emdeon.vmd',name = Nme}
   hl7Msg2:mapTree(hl7Msg)
   
   for k=1,hl7Msg.OBX:childCount() do 
      if hl7Msg2.OBX[k][2]:nodeValue() == 'ED' then 
         local fileName = utils.savePDF(hl7Msg2.OBX[k][5][5]:nodeValue())
         hl7Msg2.OBX:remove(k)
         jsonObject['pdfFileName'] = fileName
      end
   end
   jsonObject['HL7'] = hl7Msg2:S()
   return jsonObject
end

-- Description: Pulls all Emdeon reports back to a specified point
-- Parameter(s): 
--         - emdUrl: The Emdeon URL
--         - emdUser: The Emdeon user
--         - emdPasswd: The Emdeon password
--         - facility: The Emdeon facility
--         - timeBack: How far back in seconds the reports will be pulled 
-- Return(s):
--         listOfReports: a table containing all clinical report Ids pulled
--         false if the call was unsuccessful
function emdAuth.getReportList(emdUrl,emdUser,emdPasswd,facility,timeBack) 
   local baseUrl = emdUrl..'/servlet/XMLServlet?request='
   local reportListCall = emdAuth.createGetReportListCall(emdUser,emdPasswd,facility,os.ts.gmtime() - timeBack,os.ts.gmtime())
 
   local respData,respCode,respHeaders = retry.call{func=net.http.post,arg1={url=baseUrl..reportListCall,live = true},pause=30,retry=3}
   
   if respCode == 200 then 
      local prespData = xml.parse{data = respData}
      local listOfReports = {}
      for k = 1,prespData.RESULT:childCount("OBJECT") do 
         listOfReports[k] = prespData.RESULT:child("OBJECT", k).clinicalreport:nodeText()
      end
      return listOfReports
   else 
     return false
   end

end

-- Description: Constructs the body of the call to perform Emdeon report 
--               downloaded update  
-- Parameter(s): 
--         - emdUser: The Emdeon user
--         - emdPasswd: The Emdeon password
--         - facility: The Emdeon facility
--         - clinReportId: The clinical report ID
-- Return(s):
--         updateReportPullCall: The body of the call
function emdAuth.updateReportPullCall(emdUser,emdPasswd,facility,clinReportId) 
   local updateReportCall = xml.parse{data = emdAuth.updateReportPullTemplate}
   updateReportCall.REQUEST.userid:setInner(emdUser)
   updateReportCall.REQUEST.password:setInner(emdPasswd)
   updateReportCall.REQUEST.facility:setInner(facility)
   updateReportCall.REQUEST.OBJECT.clinicalreport:setInner(clinReportId)
   local updateReportPullCall = updateReportCall:S():trimWS():gsub(' ','%%20'):gsub('\n','')
   return updateReportPullCall
end

-- Description: Constructs the body of the call to pull individual Emdeon 
--               reports 
-- Parameter(s): 
--         - emdUser: The Emdeon user
--         - emdPasswd: The Emdeon password
--         - facility: The Emdeon facility
--         - clinReportId: The clinical report ID
-- Return(s):
--         eachReportCall: The body of the call
function emdAuth.createGetEachReportCall(emdUser,emdPasswd,facility,clinReportId) 
   local getReportCall = xml.parse{data = emdAuth.eachReportCallTemplate}
   getReportCall.REQUEST.userid:setInner(emdUser)
   getReportCall.REQUEST.password:setInner(emdPasswd)
   getReportCall.REQUEST.facility:setInner(facility)
   getReportCall.REQUEST.OBJECT.clinicalreport:setInner(clinReportId)
   local eachReportCall = getReportCall:S():trimWS():gsub(' ','%%20'):gsub('\n','')
   return eachReportCall
end

-- Description: Constructs the body of the call to pull a list of reports that fit
--               date criteria
-- Parameter(s): 
--         - emdUser: The Emdeon user
--         - emdPasswd: The Emdeon password
--         - facility: The Emdeon facility
--         - fromDate: The date to begin pulling from
--         - toDate: The date to pu;l until
-- Return(s):
--         reportListCall: The body of the call
function emdAuth.createGetReportListCall(emdUser,emdPasswd,facility,fromDate,toDate) 
   local dateTable = emdAuth.getEmdeonSearchDates(toDate,fromDate) 
   local listCall = xml.parse{data = emdAuth.reportListCallTemplate}
   listCall.REQUEST.userid:setInner(emdUser)
   listCall.REQUEST.password:setInner(emdPasswd)
   listCall.REQUEST.facility:setInner(facility)
   listCall.REQUEST.OBJECT.receivingorganization:setInner(facility)
   listCall.REQUEST.OBJECT.creation_datetime_from:setInner(dateTable['date1'])
   listCall.REQUEST.OBJECT.creation_datetime_to:setInner(dateTable['date2'])
   local reportListCall = listCall:S():trimWS():gsub(' ','%%20'):gsub('\n','')
   return reportListCall
end

-- Description: Takes in dates for the Emdeon report pulls and formats them
--              appropriately. If both dates are empty, then it pulls for the 
--              last 24 hours by defaults
-- Parameter(s): 
--         - date2: Date until
--         - date1: Date from
-- Return(s):
--         dateTable: A table that contains both dates. 
function emdAuth.getEmdeonSearchDates(date2,date1) 
   local dateTable = {}
   local today,yesterday
   if date2 == nil and date1 == nil then 
      date2    = os.ts.gmtime()
      date1 = date2 - 60*60*24 
   end
   dateTable['date2'] = os.ts.date('%m/%d/%Y',date2)
   dateTable['date1'] = os.ts.date('%m/%d/%Y',date1)
   return dateTable
end

-- Below are raw templates for each of the 3 main Emdeon calls: list all reports, 
--    get each individual report, and update that the report has been pulled.
emdAuth.reportListCallTemplate   = [[<REQUEST userid='dummyUserId' password='dummyPassWord' facility='dummyFacility'><OBJECT name='clinicalreport' op='search_filedelivery'><receivingorganization></receivingorganization><creation_datetime_from></creation_datetime_from><creation_datetime_to></creation_datetime_to><is_downloaded>n</is_downloaded></OBJECT></REQUEST>]]
emdAuth.eachReportCallTemplate   = [[<REQUEST userid="dummyUserId" password="dummyPassWord" facility="dummyFacility"><OBJECT name="reportdoc" op="search"><clinicalreport>dummyClinReportId</clinicalreport><emr_ready_only></emr_ready_only></OBJECT></REQUEST>]]
emdAuth.updateReportPullTemplate = [[<REQUEST userid='dummyUserId' password='dummyPassWord' facility='dummyFacility'><OBJECT name='clinicalreport' op='update'><clinicalreport></clinicalreport> <is_downloaded>y</is_downloaded></OBJECT></REQUEST>]]

return emdAuth

-- An example with a PDF below:
--a = [[<?xml version='1.0'?><RESULT sessionid="projtranclc_all43bc074ea0ec8863|43bb70e9835ba14d|41de5788c0000000|41cf3caf11800000|"><OBJECT name="reportdoc" op="search"><document>596834492310319</document><format_hl7></format_hl7><clinicalreport>4358503302</clinicalreport><mime_type>pdf</mime_type><sequence>1</sequence><body_text></body_text><emr_ready_only>N</emr_ready_only><clearance></clearance><ownerid></ownerid></OBJECT><OBJECT name="reportdoc" op="search"><document>596834492310322</document><format_hl7></format_hl7><clinicalreport>4358503302</clinicalreport><mime_type>html</mime_type><sequence>2</sequence><body_text>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&lt;title&gt;LABORATORY REPORT&lt;/title&gt;&lt;/head&gt;&#10;&lt;body style=&quot;position: absolute; left: 0px; top: 0px;&quot;&gt;&#10;&lt;script type=&quot;text/javascript&quot;&gt;&#10;// DATE VERSION 2006-05-05&#10;// Print Margins Need to 0.25in to paginate properly - Including print margin - page size is 816 x 1056 or 768 x 1008 excluding margins&#10;// TEMPLATE - Result Service will find FIRST instance of &lt;script&gt; and THEN find s_report - and will fill out all requested names or empty is not available&#10;// ALLOWED OBJECTS - orderresult, clinicalreport, receving_caregiver(caregiver), receiving_organization (organization), person&#10;// Values that normally would contain a &quot;system code&quot; - are supplied with the code description instead&#10;// Left Justify all lines in s_report - the &quot;test&quot; values can be whatever - they will be replaced at the server&#10;var s_report={&#10;organization:&#10;{&#10;contact_phone: &apos;2159979959&apos;,&#10;mailing_address_1: &apos;1 Highland Dr&apos;,&#10;mailing_address_2: &apos;&apos;,&#10;mailing_city: &apos;Chalfont&apos;,&#10;mailing_state: &apos;PA&apos;,&#10;mailing_zip: &apos;18914&apos;,&#10;organization_name: &apos;Project Transition&apos;&#10;},&#10;clinicalreport:&#10;{&#10;report_subject: &apos;&apos;,&#10;report_status: &apos;F&apos;,&#10;report_type: &apos;Lab Results&apos;&#10;},&#10;orderresult:&#10;{&#10;receiving_cg_id: &apos;19128022&apos;,&#10;referring_caregiver_name: &apos;Mitchell, Lindsay&apos;,&#10;person_account_number: &apos;3750&apos;,&#10;person_age: &apos;48&apos;,&#10;person_age_type: &apos;YEARS&apos;,&#10;filler_order_number: &apos;NE412607D&apos;,&#10;placer_order_number: &apos;26443573&apos;,&#10;login_datetime: &apos;11/27/2018  2:47 PM&apos;,&#10;collection_datetime: &apos;11/21/2018 10:55 AM&apos;,&#10;result_datetime: &apos;11/28/2018  2:17 PM&apos;,&#10;result_status: &apos;F&apos;&#10;},&#10;caregiver:&#10;{&#10;first_name: &apos;&apos;,&#10;last_name: &apos;&apos;,&#10;middle_name: &apos;&apos;,&#10;suffix: &apos;&apos;&#10;},&#10;person:&#10;{&#10;last_name: &apos;MEMBER&apos;,&#10;first_name: &apos;TEST&apos;,&#10;middle_name: &apos;&apos;,&#10;suffix: &apos;&apos;,&#10;sex: &apos;&apos;,&#10;birth_date: &apos;12/31/1969&apos;,&#10;home_phone_number: &apos;9979959&apos;,&#10;home_phone_area_code: &apos;215&apos;&#10;},&#10;lab:&#10;{&#10;alternate_name: &apos;&apos;,&#10;clia_number: &apos;&apos;,&#10;director_name_1: &apos;&apos;,&#10;phone_area_code: &apos;727&apos;,&#10;phone_number: &apos;7867954&apos;,&#10;lab_name: &apos;QUEST DIAGNOSTICS-PHILADELPHIA&apos;,&#10;address_1: &apos;400 Egypt Road&apos;,&#10;address_2: &apos;&apos;,&#10;city: &apos;Norristown&apos;,&#10;state: &apos;PA&apos;,&#10;zip: &apos;19403&apos;&#10;},&#10;file:&#10;{&#10;filename: &apos;https://clinician.emdeon.com/images/lab/Quest.jpg&apos;,&#10;contents: &apos;QUEST DIAGNOSTICS-PHILADELPHIA Logo&apos;&#10;}&#10;};//end s_report&#10;var s_sLabLogo= s_report.file.filename;&#10;var s_sLabLogoText= s_report.file.contents;&#10;if ( !s_sLabLogo.length )&#10;{&#10;s_sLabLogo= &apos;https://clinician.emdeon.com/images/lab/clinician_logo.gif&apos;;&#10;s_sLabLogoText= &apos;QUEST Lab Logo Text&apos;;&#10;}&#10;&lt;/script&gt;&#10;&lt;script type=&quot;text/javascript&quot; src=&quot;https://clinician.emdeon.com/javascript/lab-reports/FontMetrics.js&quot;&gt;&lt;/script&gt;&#10;&lt;script type=&quot;text/javascript&quot; src=&quot;https://clinician.emdeon.com/javascript/lab-reports/QUEST.4.js&quot;&gt;&lt;/script&gt;&#10;&lt;script type=&quot;text/javascript&quot;&gt;&#10;// ReportLine(a_nSeq, a_nTestLines, a_sType, a_sTest, a_sAnalyte, a_bAbnormal, a_sStatus, a_sResult, a_sUnits, a_sRefRange, a_sSiteCode, a_sResultStatus)&#10;// Lab(a_sCode, a_sName, a_sAddress_1, a_sAddress_2, a_sCity, a_sState, a_sZip, a_sDirector, a_sPhone)&#10;var z_theReportLines= new Array();&#10;z_theReportLines[0]=new ReportLine(0,1,&apos;NTE&apos;,&apos;COMMENT:&apos;,&apos;COMMENT:&apos;,0,&apos;&apos;,&apos;NO LIVE PHI\nTESTING ONLY\n\nFASTING: YES&apos;,&apos;&apos;,&apos;&apos;,&apos;&apos;,&apos;&apos;,&apos;_COMMENT&apos;,&apos;_COMMENT&apos;,&apos;&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[1]=new ReportLine(0,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;AMPHETAMINES&apos;,0,&apos;&apos;,&apos;negative&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997628&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[2]=new ReportLine(1,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  AMPHETAMINE&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997806&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[3]=new ReportLine(2,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  METHAMPHETAMINE&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997807&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[4]=new ReportLine(3,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  MDA&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85996774&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[5]=new ReportLine(4,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  MDMA&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85996775&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[6]=new ReportLine(5,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  MDEA&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85996776&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[7]=new ReportLine(6,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;BARBITURATES&apos;,0,&apos;&apos;,&apos;negative&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997629&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[8]=new ReportLine(7,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  BUTALBITAL&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997808&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[9]=new ReportLine(8,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  BUTABARBITAL&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997809&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[10]=new ReportLine(9,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  AMOBARBITAL&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997810&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[11]=new ReportLine(10,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  PENTOBARBITAL&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997811&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[12]=new ReportLine(11,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  SECOBARBITAL&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997812&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[13]=new ReportLine(12,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  PHENOBARBITAL&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997813&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[14]=new ReportLine(13,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;BENZODIAZEPINES&apos;,0,&apos;&apos;,&apos;negative&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997630&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[15]=new ReportLine(14,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  NORDIAZEPAM&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85998027&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[16]=new ReportLine(15,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  OXAZEPAM&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85998028&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[17]=new ReportLine(16,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  TEMAZEPAM&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85998029&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[18]=new ReportLine(17,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  LORAZEPAM&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85998030&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[19]=new ReportLine(18,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  FLURAZEPAM METABOLITE&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85998031&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[20]=new ReportLine(19,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  ALPRAZOLAM&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85998032&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[21]=new ReportLine(20,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COCAINE&apos;,0,&apos;&apos;,&apos;negative&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997631&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[22]=new ReportLine(21,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  COCAINE METABOLITE&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;86002073&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[23]=new ReportLine(22,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;METHADONE&apos;,0,&apos;&apos;,&apos;negative&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997635&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[24]=new ReportLine(23,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  METHADONE&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997820&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[25]=new ReportLine(24,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;OPIATES&apos;,0,&apos;&apos;,&apos;negative&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997637&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[26]=new ReportLine(25,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  MORPHINE&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997823&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[27]=new ReportLine(26,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  CODEINE&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997822&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[28]=new ReportLine(27,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  HYDROMORPHONE&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997825&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[29]=new ReportLine(28,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  HYDROCODONE&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997824&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[30]=new ReportLine(29,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  OXYCODONE&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;86002064&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[31]=new ReportLine(30,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;PCP (PHENCYCLIDINE)&apos;,0,&apos;&apos;,&apos;negative&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997638&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[32]=new ReportLine(31,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  PHENCYCLIDINE&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997826&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[33]=new ReportLine(32,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;PROPOXYPHENE&apos;,0,&apos;&apos;,&apos;negative&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997639&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[34]=new ReportLine(33,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  PROPOXYPHENE METABOLITE&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;86001807&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[35]=new ReportLine(34,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;MARIJUANA&apos;,0,&apos;&apos;,&apos;negative&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;86002071&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[36]=new ReportLine(35,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  MARIJUANA METABOLITE&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;86002074&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[37]=new ReportLine(36,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;ETHANOL&apos;,0,&apos;&apos;,&apos;negative&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;85997640&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[38]=new ReportLine(37,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;  ETHYL ALCOHOL&apos;,0,&apos;N&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;86002264&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[39]=new ReportLine(38,39,&apos;ST&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;SEE NOTE&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;F&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[40]=new ReportLine(39,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos; &apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[41]=new ReportLine(40,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;UDS Cutoff Levels&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[42]=new ReportLine(41,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;                    Screen Cutoff    Confirm Cutoff&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[43]=new ReportLine(42,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;Amphetamines         1000 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[44]=new ReportLine(43,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;  Amphetamine                          200 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[45]=new ReportLine(44,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;  Methamphetamine                      200 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[46]=new ReportLine(45,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;  MDMA                                 200 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[47]=new ReportLine(46,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;  MDA                                  200 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[48]=new ReportLine(47,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;  MDEA                                 200 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[49]=new ReportLine(48,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;Barbiturates          300 ng/mL        300 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[50]=new ReportLine(49,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;Benzodiazepines       300 ng/mL        300 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[51]=new ReportLine(50,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;Cocaine Metabolite    300 ng/mL        150 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[52]=new ReportLine(51,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;Methadone             300 ng/mL        300 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[53]=new ReportLine(52,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;Opiates&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[54]=new ReportLine(53,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;  Codeine             300 ng/mL        100 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[55]=new ReportLine(54,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;  Morphine            300 ng/mL        100 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[56]=new ReportLine(55,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;  Hydrocodone         300 ng/mL        100 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[57]=new ReportLine(56,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;  Hydromorphone       300 ng/mL        100 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[58]=new ReportLine(57,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;  Oxycodone           100 ng/mL        100 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[59]=new ReportLine(58,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;Phencyclidine          25 ng/mL         25 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[60]=new ReportLine(59,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;Propoxyphene          300 ng/mL        300 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[61]=new ReportLine(60,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos;THC Metabolite         20 ng/mL         15 ng/mL&apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[62]=new ReportLine(61,39,&apos;NTE&apos;,&apos;URINE DRUG SCREEN 1&apos;,&apos;COMMENT&apos;,0,&apos;&apos;,&apos; &apos;,&apos;&apos;,&apos;&apos;,&apos;AMD&apos;,&apos;&apos;,&apos;19499&apos;,&apos;86002263&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;z_theReportLines[63]=new ReportLine(0,1,&apos;&apos;,&apos;Clinical PDF Report NE412607D-1&apos;,&apos;Clinical PDF Report NE412607D-1&apos;,0,&apos;&apos;,&apos;DNR&apos;,&apos;&apos;,&apos;&apos;,&apos;&apos;,&apos;F&apos;,&apos;ClinicalPDFReport1&apos;,&apos;ClinicalPDFReport1&apos;,&apos;11/28/2018  2:17 PM&apos;,&apos;&apos;,&apos;&apos;);&#10;var z_theLabs= new Array();&#10;z_theLabs[0]=new Lab(&apos;AMD&apos;,&apos;QUEST DIAGNOSTICS/NICHOLS CHANTILLY&apos;,&apos;14225 Newbrook Drive&apos;,&apos;&apos;,&apos;Chantilly&apos;,&apos;VA&apos;,&apos;201512228&apos;,&apos;Patrick W. Mason, M.D., Ph.D.&apos;,&apos;7038026900&apos;,&apos;AMD&apos;);&#10;process_lines(s_boxReport.m_nTop, z_theReportLines, z_theLabs);&#10;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;</body_text><emr_ready_only>N</emr_ready_only><clearance></clearance><ownerid></ownerid></OBJECT><OBJECT name="reportdoc" op="search"><document>596834492310323</document><format_hl7></format_hl7><clinicalreport>4358503302</clinicalreport><mime_type>HL7</mime_type><sequence>3</sequence><body_text>MSH|^~\&amp;|QUEST|PHP|EMR|19128022|20181128142030||ORU^R01|4079958580|P|2.3.1&#13;PID|1|3750|3750^^^^PAN|26443573|MEMBER^TEST||19691231||||123 MAIN STREET^^CHALFONT^PA^18914||2159979959^PRN^^^^215^9979959|||||1488550&#13;NTE|1|L|NO LIVE PHI&#13;NTE|2|L|TESTING ONLY&#13;NTE|3|L&#13;NTE|4|L|FASTING: YES&#13;PV1|1|||||||||||||||||||T&#13;ORC|RE|26443573|NE412607D||||||20181128142030|||1033436050^Mitchell^Lindsay^^^^^^^^^^NPI&#13;OBR|1|26443573|NE412607D|19499^URINE DRUG SCREEN 1^PHP|||20181121105500||||L|||20181127144700||1033436050^Mitchell^Lindsay^^^^^^^^^^NPI||||||20181128141700|||F||||||||||||||||||||||||II&#13;OBX|1|ST|85997628^AMPHETAMINES^PHP||negative||||||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|2|ST|85997806^  AMPHETAMINE^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|3|ST|85997807^  METHAMPHETAMINE^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|4|ST|85996774^  MDA^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|5|ST|85996775^  MDMA^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|6|ST|85996776^  MDEA^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|7|ST|85997629^BARBITURATES^PHP||negative||||||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|8|ST|85997808^  BUTALBITAL^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|9|ST|85997809^  BUTABARBITAL^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|10|ST|85997810^  AMOBARBITAL^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|11|ST|85997811^  PENTOBARBITAL^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|12|ST|85997812^  SECOBARBITAL^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|13|ST|85997813^  PHENOBARBITAL^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|14|ST|85997630^BENZODIAZEPINES^PHP||negative||||||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|15|ST|85998027^  NORDIAZEPAM^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|16|ST|85998028^  OXAZEPAM^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|17|ST|85998029^  TEMAZEPAM^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|18|ST|85998030^  LORAZEPAM^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|19|ST|85998031^  FLURAZEPAM METABOLITE^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|20|ST|85998032^  ALPRAZOLAM^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|21|ST|85997631^COCAINE^PHP||negative||||||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|22|ST|86002073^  COCAINE METABOLITE^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|23|ST|85997635^METHADONE^PHP||negative||||||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|24|ST|85997820^  METHADONE^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|25|ST|85997637^OPIATES^PHP||negative||||||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|26|ST|85997823^  MORPHINE^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|27|ST|85997822^  CODEINE^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|28|ST|85997825^  HYDROMORPHONE^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|29|ST|85997824^  HYDROCODONE^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|30|ST|86002064^  OXYCODONE^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|31|ST|85997638^PCP (PHENCYCLIDINE)^PHP||negative||||||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|32|ST|85997826^  PHENCYCLIDINE^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|33|ST|85997639^PROPOXYPHENE^PHP||negative||||||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|34|ST|86001807^  PROPOXYPHENE METABOLITE^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|35|ST|86002071^MARIJUANA^PHP||negative||||||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|36|ST|86002074^  MARIJUANA METABOLITE^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|37|ST|85997640^ETHANOL^PHP||negative||||||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|38|ST|86002264^  ETHYL ALCOHOL^PHP||DNR|||N|||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;OBX|39|ST|86002263^COMMENT^PHP||SEE NOTE||||||F|||20181128141700|AMD^QUEST DIAGNOSTICS/NICHOLS CHANTILLY&#13;NTE|1|L| &#13;NTE|2|L|UDS Cutoff Levels&#13;NTE|3|L|                    Screen Cutoff    Confirm Cutoff&#13;NTE|4|L|Amphetamines         1000 ng/mL&#13;NTE|5|L|  Amphetamine                          200 ng/mL&#13;NTE|6|L|  Methamphetamine                      200 ng/mL&#13;NTE|7|L|  MDMA                                 200 ng/mL&#13;NTE|8|L|  MDA                                  200 ng/mL&#13;NTE|9|L|  MDEA                                 200 ng/mL&#13;NTE|10|L|Barbiturates          300 ng/mL        300 ng/mL&#13;NTE|11|L|Benzodiazepines       300 ng/mL        300 ng/mL&#13;NTE|12|L|Cocaine Metabolite    300 ng/mL        150 ng/mL&#13;NTE|13|L|Methadone             300 ng/mL        300 ng/mL&#13;NTE|14|L|Opiates&#13;NTE|15|L|  Codeine             300 ng/mL        100 ng/mL&#13;NTE|16|L|  Morphine            300 ng/mL        100 ng/mL&#13;NTE|17|L|  Hydrocodone         300 ng/mL        100 ng/mL&#13;NTE|18|L|  Hydromorphone       300 ng/mL        100 ng/mL&#13;NTE|19|L|  Oxycodone           100 ng/mL        100 ng/mL&#13;NTE|20|L|Phencyclidine          25 ng/mL         25 ng/mL&#13;NTE|21|L|Propoxyphene          300 ng/mL        300 ng/mL&#13;NTE|22|L|THC Metabolite         20 ng/mL         15 ng/mL&#13;NTE|23|L| &#13;OBR|2|26443573|NE412607D|ClinicalPDFReport1^Clinical PDF Report NE412607D-1^PHP|||20181121105500||||L|||20181127144700||1033436050^Mitchell^Lindsay^^^^^^^^^^NPI||||||20181128141700|||F&#13;OBX|1|ED|ClinicalPDFReport1^Clinical PDF Report NE412607D-1^PHP||PHP^^PDF^Base64^||||||F&#13;</body_text><emr_ready_only>Y</emr_ready_only><clearance></clearance><ownerid></ownerid></OBJECT></RESULT>]]
